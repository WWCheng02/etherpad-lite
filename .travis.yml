language: node_js

node_js:
  - "lts/*" # Most recent LTS version
  
env:
  - IMGNAME=WWCheng02/etherpadtest

services:
  - docker

cache: false

## before install phase, install Libreoffice on Ubuntu
before_install:
  - sudo add-apt-repository -y ppa:libreoffice/ppa # install libreoffice through PPA
  - sudo apt-get update # update package
  - sudo apt-get -y install libreoffice # install libreoffice
  - sudo apt-get -y install libreoffice-pdfimport # install pdf import component for LibreOffice
  - docker image build -t $(IMGNAME) .
  
## install dependecy required
install:
  - "bin/installDeps.sh"
  - "cd src && npm install && cd -"
  - "npm install -g etherpad-load-test"

## environment variables that are global to matrix
env:
  global:
    ## encrypt sensitive data 
    - secure: "WMGxFkOeTTlhWB+ChMucRtIqVmMbwzYdNHuHQjKCcj8HBEPdZLfCuK/kf4rG\nVLcLQiIsyllqzNhBGVHG1nyqWr0/LTm8JRqSCDDVIhpyzp9KpCJQQJG2Uwjk\n6/HIJJh/wbxsEdLNV2crYU/EiVO3A4Bq0YTHUlbhUqG3mSCr5Ec="
    - secure: "gejXUAHYscbR6Bodw35XexpToqWkv2ifeECsbeEmjaLkYzXmUUNWJGknKSu7\nEUsSfQV8w+hxApr1Z+jNqk9aX3K1I4btL3cwk2trnNI8XRAvu1c1Iv60eerI\nkE82Rsd5lwUaMEh+/HoL8ztFCZamVndoNgX7HWp5J/NRZZMmh4g="

jobs:
  include:
    - name: "Backend test"
      script:
        - "tests/frontend/travis/runnerBackend.sh"
    - name: "Load test"
      script:
        - "tests/frontend/travis/runnerLoadTest.sh"

## Dockerfile tests
#    - name: "Test the Dockerfile"
#      install:
#        - "cd src && npm install && cd -"
#      script:
#        - "docker build -t etherpad:test ."
#        - "docker run -d -p 9001:9001 etherpad:test && sleep 3"
#        - "cd src && npm run test-container"

after_success:
 - docker login -u ${DHUB_USERNAME} -p ${DHUB_PASS}
 - echo "${SSH_KEY}" |  base64 --decode > /tmp/ssh_rsa
 - chmod 600 /tmp/ssh_rsa
 - ssh -o "StrictHostKeyChecking no" pi@${IPADDR} -i /tmp/ssh_rsa "echo test > test.log"
 - ssh -o "StrictHostKeyChecking no" pi@${IPADDR} -i /tmp/ssh_rsa "cd ${INSTALL_LOCATION} && git pull ${TRAVIS_BUILD_WEB_URL} && docker image build -t ${IMGNAME} ${INSTALL_LOCATION}/. && docker push ${IMGNAME} && docker stop discordbot; docker rm etherpad-lite; docker run --name ether TOKEN=${TOKEN} ${IMGNAME}"


notifications:
  # notify build results through email
  email:
  - wonweicheng@gmail.com 
